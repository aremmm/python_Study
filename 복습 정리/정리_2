#자료구조
#(1) 리스트 list
# ㄴ> 기호: []
# ㄴ> 특징: 자료의 순서가 있고, 인덱스를 통해 값 접근 및 수정.
# ㄴ> 독특한 문법:
#             리스트컴프리헨션
#             numlist = [i for i in range(1, 11) if i%2==1]
#             numlist = list(map(int, numlist))
#             numlist = [int(i) for i in numlist]

# 튜플 list
# ㄴ> 기호: ()
# ㄴ> 특징: 리스트와 유사하지만, 자료 수정 및 삭제가 불가능한 상수로 활용.
# 집합 set
# ㄴ> 기호: {}
# ㄴ> 특징: 중복을 허용하지 않는 자료구조. 자료의 순서가 없다.(자료의 순서가 없다는 것은 정렬을 시키지 못한다는 뜻)
#          집합 연상이 가능.(합집합, 교집합, 차집합)
# 딕셔너리 dict
# ㄴ> 기호: {k:v}
# ㄴ> 특징: 키와 밸류로 이루어진 자료구조. 키를 통해 값을 접근이 가능하다. 자료의 순서가 없다.

# 반복문과 자료구조.
# 자료구조에 있는 데이터를 순환 참조하고 싶은 경우
#(1) 리스트, 튜플, 셋
#for n in numList :
#      print(n)
#for i, n in enumerate(numList) :
#        print(n)
#numList1 - 크기가 같은 경우
#numList2
#for n1, n2 in zip(numList1, numList2) :
#        print(n1, n2)
#(2) 딕셔너리
     

#numList = [1,2,3,3,3,3,5]
#from collections import Counter
#counter(numList)
#counter(numList) .most_commons(4)

##아스키코드: 문자와 숫자간의 

